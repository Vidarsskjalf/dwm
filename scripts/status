#!/bin/bash

prev_idle=0
prev_total=0

while true; do

    #########
    ## CPU ##
    #########

    # Read CPU statistics
    cpu=($(head -n 1 /proc/stat))
    idle=${cpu[4]}
    total=0

    # Calculate total CPU time
    for value in "${cpu[@]:1}"; do
        total=$((total + value))
    done

    # Calculate CPU usage since last check
    diff_idle=$((idle - prev_idle))
    diff_total=$((total - prev_total))
    diff_usage=$((100 * (diff_total - diff_idle) / diff_total))

    # Save the current values for the next iteration
    prev_idle=$idle
    prev_total=$total

    #############
    ## Network ##
    #############

    # Get the IP address
    ip_address=$(ip addr show | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}' | cut -d'/' -f1 | head -n 1)
       
    # If no IP address is found
    if [ -z "$ip_address" ]; then
        ip_address="Network disconnected"
    fi

    #############
    ## Battery ##
    #############


    # Thresholds
    LOW_BATTERY_THRESHOLD=20
    CRITICAL_BATTERY_THRESHOLD=10

    # Get the battery percentage
    battery_percentage=$(acpi -b | grep -v "Unknown" | head -n 1 | grep -P -o '[0-9]+(?=%)')
    #battery_status=$(acpi -b | grep -oP '(Charging|Discharging)')

    #echo "Battery level: $battery_percentage, Status: $battery_status"

   # if [[ $battery_status == "Discharging" && $battery_percentage -le $CRITICAL_BATTERY_THRESHOLD ]]; then
    #    notify-send -u critical "Battery Low" "Battery level is critically low ($battery_percentage%). Please plug in your charger."
    #    echo "Critical battery notification sent."
    #elif [[ $battery_status == "Discharging" && $battery_statys -le $LOW_BATTERY_THRESHOLD ]]; then
     #   notify-send -u normal "Battery Low" "Battery level is low ($battery_percentage%)."
    #fi
    
    # If no battery percentage is found
    if [ -z "$battery_percentage" ]; then
        battery_percentage="No Battery"
    fi

    ######################
    ## Status bar order ##
    ######################

    # Update the root window name with CPU usage, IP address, battery percentage, and date
    xsetroot -name " $ip_address | $diff_usage% CPU | $battery_percentage% | $(date +%A" "%d" "%B" "%H:%M:%S)"

    # Sleep for 1 second
    sleep 1
done
